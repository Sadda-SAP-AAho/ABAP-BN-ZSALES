managed;
strict;
define behavior for ZR_INVGROUPED000 alias ZrInvgrouped000
implementation in class ZBP_R_INVGROUPED unique
persistent table ZINV_GROUPED
etag master LastChangedAt
lock master
authorization master( global )

{

  field ( readonly )
   CreatedBy,
   CreatedAt,
   LastChangedBy,
   LastChangedAt;

  field ( readonly : update )
   Orderdate,
   Type;


  create;
  update;
  delete;

  static action calculate parameter ZR_PARMCALCULATE ;

  mapping for ZINV_GROUPED
  {
    Orderdate = orderdate;
    Type = type;
    Nooforder = nooforder;
    Orderamount = orderamount;
    Socreated = socreated;
    Soamount = soamount;
    Outboundcreated = outboundcreated;
    Orderbilled = orderbilled;
    Billedamount = billedamount;
    Pocreated = pocreated;
    Migocreated = migocreated;
    Datavalidated = datavalidated;
    Potobecreated = potobecreated;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
  }

  association _InvoiceHeaders {create;}
  association _UnsoldHeaders {create;}
}


define behavior for ZR_INV_MST000 alias ZrInvMst000
implementation in class ZBP_R_INVMST unique
persistent table ZINV_MST
etag master LastChangedAt
lock dependent by _Group
authorization dependent by _Group

{

  field ( readonly )
   CreatedBy,
   CreatedAt,
   LastChangedBy,
   LastChangedAt;

  field ( readonly : update )
  Imdate,
  Type,
   CompCode,
   Plant,
   Imfyear,
   Imtype,
   Imno;


  update;
  delete;

 action clearProcessing;

  mapping for ZINV_MST
  {
    CompCode = comp_code;
    Plant = plant;
    Imfyear = imfyear;
    Imtype = imtype;
    Imno = imno;
    Imnoseries = imnoseries;
    Imcat = imcat;
    Imdate = imdate;
    Imsalesmancode = imsalesmancode;
    Impartycode = impartycode;
    Imroutecode = imroutecode;
    Imvehcode = imvehcode;
    Imtransname = imtransname;
    Imgrno = imgrno;
    Imgrdate = imgrdate;
    Imremarks = imremarks;
    Imtotqty = imtotqty;
    Imgrswgt = imgrswgt;
    Imvogamt = imvogamt;
    Imtxbamt = imtxbamt;
    Imnetamt = imnetamt;
    Imnetamtro = imnetamtro;
    Imcrates1 = imcrates1;
    Imcrates2 = imcrates2;
    Imrcds = imrcds;
    Imdeltag = imdeltag;
    Imusercode = imusercode;
    Imdfdt = imdfdt;
    Imdudt = imdudt;
    Imaid = imaid;
    Imlocktag = imlocktag;
    Imdespatchtag = imdespatchtag;
    Imsumno = imsumno;
    Imcrates3 = imcrates3;
    Imcrates4 = imcrates4;
    Imorderno = imorderno;
    Imprintedon = imprintedon;
    Imprintedby = imprintedby;
    Imsaledate = imsaledate;
    Imddealercode = imddealercode;
    Imcgstamt = imcgstamt;
    Imsgstamt = imsgstamt;
    Imigstamt = imigstamt;
    Imdealercode = imdealercode;
    Imvroutecode = imvroutecode;
    Imewaybillno = imewaybillno;
    Imewaybilltag = imewaybilltag;
    Imewaybilldate = imewaybilldate;
    Imdeviceid = imdeviceid;
    Imver = imver;
    Imsscode = imsscode;
    Imempcode = imempcode;
    Imewaystatus = imewaystatus;
    Imirnstatus = imirnstatus;
    Imdealergstno = imdealergstno;
    Imsuptype = imsuptype;
    Imminno = imminno;
    Immindt = immindt;
    Scrapbill = scrapbill;
    Imcmpcode = imcmpcode;
    ErrorLog = error_log;
    Remarks = remarks;
    Processed = processed;
    ReferenceDoc = reference_doc;
    Orderamount = orderamount;
    ReferenceDocDel = reference_doc_del;
    ReferenceDocInvoice = reference_doc_invoice;
    Invoiceamount = invoiceamount;
    Status = status;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    CustCode = cust_code;
    PoTobeCreated = po_tobe_created;
    PoProcessed = po_processed;
    PoNo = po_no;
    MigoProcessed = migo_processed;
    MigoNo = migo_no;
  }

  association _Group;
}

define behavior for ZR_USDATAMST alias ZrUsdatamst
implementation in class ZBP_R_USDATAMST unique
persistent table zdt_usdatamst1
etag master LastChangedAt
lock dependent by _Group
authorization dependent by _Group

{

  field ( readonly )
   CreatedBy,
   CreatedAt,
   LastChangedBy,
   LastChangedAt;

  field ( readonly : update )
   Imdate,
   Type,
   CompCode,
   Plant,
   Imfyear,
   Imtype,
   Imno;


  update;
  delete;

 action clearProcessingUnsold;

  mapping for zdt_usdatamst1
{
    CompCode = comp_code;
    Plant = plant;
    Imfyear = imfyear;
    Imtype = imtype;
    Imno = imno;
    Imnoseries = imnoseries;
    Imdate = imdate;
    Imjobno = imjobno;
    Imsalesmancode = imsalesmancode;
    Impartycode = impartycode;
    Imroutecode = imroutecode;
    Imremarks = imremarks;
    Imtotqty = imtotqty;
    Imvogamt = imvogamt;
    Imtxbamt = imtxbamt;
    Imnetamt = imnetamt;
    Imnetamtro = imnetamtro;
    Imcrates1 = imcrates1;
    Imcrates2 = imcrates2;
    Imrcds = imrcds;
    Imdeltag = imdeltag;
    Imusercode = imusercode;
    Imdfdt = imdfdt;
    Imdudt = imdudt;
    Imaid = imaid;
    Iminno = iminno;
    Imindate = imindate;
    Imfgpasstag = imfgpasstag;
    Imagnstgpno = imagnstgpno;
    Imagnstgpdate = imagnstgpdate;
    Imcgstamount = imcgstamount;
    Imsgstamount = imsgstamount;
    Imigstamount = imigstamount;
    ErrorLog = error_log;
    Remarks = remarks;
    Processed = processed;
    ReferenceDoc = reference_doc;
    Orderamount = orderamount;
    ReferenceDocDel = reference_doc_del;
    ReferenceDocInvoice = reference_doc_invoice;
    Invoiceamount = invoiceamount;
    Status = status;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    Ztime = ztime;
    Datavalidated = datavalidated;
    CustCode = cust_code;
}


  association _Group;
}